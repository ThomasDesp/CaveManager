// <auto-generated />
using System;
using CaveManager.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaveManager.Migrations
{
    [DbContext(typeof(CaveManagerContext))]
    partial class CaveManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CaveManager.Entities.Cave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cave");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdUser = 0,
                            Name = "BatCave"
                        },
                        new
                        {
                            Id = 2,
                            IdUser = 0,
                            Name = "ThomCave"
                        },
                        new
                        {
                            Id = 3,
                            IdUser = 0,
                            Name = "Cavaleo"
                        });
                });

            modelBuilder.Entity("CaveManager.Entities.Drawer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaveId")
                        .HasColumnType("int");

                    b.Property<int>("IdCave")
                        .HasColumnType("int");

                    b.Property<int>("MaxPlace")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceUsed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaveId");

                    b.ToTable("Drawer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCave = 1,
                            MaxPlace = 10,
                            Name = "Pomme",
                            PlaceUsed = 2
                        },
                        new
                        {
                            Id = 2,
                            IdCave = 2,
                            MaxPlace = 10,
                            Name = "Poire",
                            PlaceUsed = 1
                        },
                        new
                        {
                            Id = 3,
                            IdCave = 1,
                            MaxPlace = 10,
                            Name = "Banana",
                            PlaceUsed = 0
                        });
                });

            modelBuilder.Entity("CaveManager.Entities.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstConnection")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "wil@gmail.com",
                            FirstName = "Wil",
                            IsAged = true,
                            IsFirstConnection = false,
                            LastName = "TF",
                            Password = "MelmanoucheA9"
                        },
                        new
                        {
                            Id = 2,
                            Email = "leo@gmail.com",
                            FirstName = "Leo",
                            IsAged = true,
                            IsFirstConnection = false,
                            LastName = "SMaster",
                            Password = "1v9A"
                        },
                        new
                        {
                            Id = 3,
                            Email = "thom@gmail.com",
                            FirstName = "Thom",
                            IsAged = true,
                            IsFirstConnection = true,
                            LastName = "PokFan",
                            Password = "DAzE2"
                        });
                });

            modelBuilder.Entity("CaveManager.Entities.Wine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DrawerId")
                        .HasColumnType("int");

                    b.Property<int>("IdDrawer")
                        .HasColumnType("int");

                    b.Property<int?>("MaxVintageRecommended")
                        .HasColumnType("int");

                    b.Property<int?>("MinVintageRecommended")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrawerId");

                    b.ToTable("Wine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdDrawer = 1,
                            Name = "Vin de fou",
                            Type = "Red Wine"
                        },
                        new
                        {
                            Id = 2,
                            IdDrawer = 1,
                            Name = "Vin pas fou",
                            Type = "Rosé Wine"
                        },
                        new
                        {
                            Id = 3,
                            IdDrawer = 2,
                            Name = "Vin de fou pas fou",
                            Type = "White Wine"
                        });
                });

            modelBuilder.Entity("CaveManager.Entities.Cave", b =>
                {
                    b.HasOne("CaveManager.Entities.Owner", null)
                        .WithMany("Caves")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("CaveManager.Entities.Drawer", b =>
                {
                    b.HasOne("CaveManager.Entities.Cave", null)
                        .WithMany("Drawer")
                        .HasForeignKey("CaveId");
                });

            modelBuilder.Entity("CaveManager.Entities.Wine", b =>
                {
                    b.HasOne("CaveManager.Entities.Drawer", null)
                        .WithMany("Wines")
                        .HasForeignKey("DrawerId");
                });

            modelBuilder.Entity("CaveManager.Entities.Cave", b =>
                {
                    b.Navigation("Drawer");
                });

            modelBuilder.Entity("CaveManager.Entities.Drawer", b =>
                {
                    b.Navigation("Wines");
                });

            modelBuilder.Entity("CaveManager.Entities.Owner", b =>
                {
                    b.Navigation("Caves");
                });
#pragma warning restore 612, 618
        }
    }
}
